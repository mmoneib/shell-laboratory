#!/bin/sh
################################################################################
# ~title of script here~                                                      #
#                                                                              #
# ~extensive description of script here~                                       #
#                                                                              #
# Type: Actions            .                                                   #
# Dependencies: Unix-like Shell (tested with Bash)                             #
#     ~additional dependenies here~                                            #
# Developed by: Muhammad Moneib                                                #
################################################################################

# Positional parameters inside action functions are used especially for the case of sourcing.
# Required parameters are denoted with the p_r_ prefix.
# Optional parameters are denoted with the p_o_ prefix.

function __print_usage {
  sh $(dirname $0)/help_actions.sh -a print_actions_usage_exiting -t $0
}

function __print_help {
  sh $(dirname $0)/help_actions.sh -a print_actions_help -t $0
}

## ~comment describing the action here~
function ~action function name here~ {
  [ -z "~parameter variable here~" ] && ~parameter variable here~="~function positional parameter here~"
  ~action implementation here~
}

~repitition~

if [ "$1" != "skip_run" ]; then
  if [ -z $1 ]; then
    read -t 0.1 inp;
    [ -z $inp ] && print_usage
  fi
  while getopts "ha:~getopts parameter string here~" o; do
    case $o in
      ## The name of the function to be triggered.
      a) p_r_action=$OPTARG ;;
      ~description of parameter here~
      ~parameter character here~) ~parameter variable here~=$OPTARG ;;
      ~repitition~
      ~repitition~
      h) print_help ;;
      *) print_usage ;;
    esac
  done
  # Generic action call with positional parameters based on available ones.
  $action ~parameter variable here~ ~repitition~
fi
